.travis.yml # Travis CI 설정 파일

  language: java
  jdk:
    - openjdk17
  
  services:
    - docker
  
  before_install:
    - chmod +x gradlew  
      # before_install = 실제 빌드 전에 실행할 명령어들을 지정
      # Gradle wrapper 파일(gradlew)에 실행 권한을 부여 (Gradle 빌드를 수행하기 위해 필요)
      # chmod: 파일 모드(권한)를 변경하는 명령어, +x: 파일에 실행 권한을 추가, gradlew: 실행 권한을 부여할 대상 파일

  script:
    - ./gradlew build  
      # script = 빌드 단계에서 실행할 명령어들을 지정
      # Gradle을 사용하여 프로젝트를 빌드
  
  after_success:
    - docker build -t <Docker Hub 계정 이름>/<repository_name> .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin  
    - docker push <Docker Hub 계정 이름>/<repository_name>  
      # after_success = 빌드가 성공한 후 실행할 명령어들을 지정
      # docker build: 현재 디렉토리에 있는 Dockerfile을 기반으로 Docker 이미지를 빌드하는 명령어 (Docker 이미지 빌드)
      # -t: 빌드된 이미지에 태그를 지정 (이미지에 이름과 태그를 부여, 이미지를 쉽게 참조하고 관리할 수 있음)
      # <Docker Hub 계정 이름>/<이미지 이름>: Docker Hub에서 사용될 이미지의 이름
      # .: 현재 디렉토리를 빌드 컨텍스트로 사용 (Dockerfile이 현재 디렉토리에 있어야 함)
      # - 사용 예시 docker build -t myusername/repositoryname .
      # echo "$DOCKER_PASSWORD": 환경 변수에 저장된 Docker Hub 비밀번호를 출력 (Docker Hub 로그인)
      # |: 앞의 명령어 출력 결과를 다음 명령어의 입력으로 전달 (파이프 연산자)
      # docker login -u "$DOCKER_USERNAME" --password-stdin = Docker Hub에 로그인하는 명령어
      # -u "$DOCKER_USERNAME": 환경 변수에 저장된 Docker Hub 사용자 이름을 사용하여 로그인
      # --password-stdin: 표준 입력으로부터 비밀번호를 읽음
      # - 사용 예시 : echo "mydockerpassword" | docker login -u "myusername" --password-stdin
      # docker push = 로컬에서 빌드한 Docker 이미지를 Docker Hub 레지스트리에 업로드하는 명령어 (Docker 이미지 푸시)
      # <Docker Hub 계정 이름>/<이미지 이름> Docker Hub에서 이미지가 저장될 리포지토리 경로

  deploy:
    provider: script
    script: bash scripts/deploy.sh  # 배포 스크립트 실행
    on:
      branch: main  # main 브랜치에서만 배포

