복잡한 사용자 인터페이스를 효율적으로 구축할 수 있음

컴포넌트 (Component)
 - 재사용 가능한 UI 요소를 정의 (독립적인 코드 블록)
 - 여러 컴포넌트를 조합해 복잡한 UI를 만들 수 있음

JSX (JavaScript XML)
 - JavaScript, XML 결합 (JavaScript의 모든 기능을 사용할 수 있음)

가상 DOM
 - 변경 사항을 먼저 가상 DOM에 적용 후 실제 DOM과 비교하여 필요한 부분만 업데이트 (성능 최적화 유리)

상태와 속성
 - 컴포넌트는 데이터와 함께 작동
 - 상태: 컴포넌트 내부에서 관리되는 동적인 데이터 (변할 수 있는 정보)
 - 속성: 부모 컴포넌트에서 자식 컴포넌트로 전달되는 데이터 (사용자가 선택한 후 변하지 않는 정보)

생명주기 메서드
 - 생성, 업데이트, 소멸 등의 과정에서 특정 메서드를 실행

JSX > node.js > js > 브라우저
 - JSX코드를 node.js가 js로 컴파일하면 브라우저가 이해할 수 있음

node.js
 - 리액트를 개발 위해 필요한 기본 필수 코드가 있는 프로젝트 자동 생성
 - 여러 라이브러리 설치
 - 로컬에서 서버 실행(실시간으로 웹페이지 볼 수 있음)
