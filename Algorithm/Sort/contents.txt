정렬 알고리즘: 데이터를 특정 순서대로 배열하는 과정

버블 정렬 (Bubble Sort): 이웃하는 숫자들을 비교하며 정렬하는 방식
 - 배열의 첫 번째 요소부터 시작해 인접한 요소와 비교하며 더 큰 값을 뒤로 보냄
 - 이 과정을 배열의 길이만큼 반복하며 매번 반복할 때마다 가장 큰 값이 배열의 끝으로 이동

선택 정렬 (Selection Sort) : 배열을 반복하여 각 위치에 들어갈 값을 선택
 - 매번 남아 있는 요소 중에서 최소값(or 최대값)을 찾아 해당 라운드의 시작 위치와 교환

삽입 정렬 (Insertion Sort): 각 숫자를 적절한 위치에 '삽입'하는 방식으로 정렬을 수행
 - 데이터가 거의 정렬되어 있을 때 매우 효율적
 - 첫 번째 요소를 정렬된 부분으로 가정하고 두 번째 요소부터 시작하여 해당 요소를 정렬된 부분 내의 적절한 위치에 삽입
 - 선택된 요소가 정렬된 부분의 요소들과 비교되어 적절한 위치를 찾을 때까지 정렬된 부분 내에서 뒤로 이동
 - 위치를 찾으면 해당 요소를 그 위치에 삽입 배열의 다음 요소로 이동

퀵 정렬 (Quick Sort) : 피벗(pivot)을 기준으로 배열을 두 부분으로 나누어 각 부분을 재귀적으로 정렬하는 방식
 - 제자리 정렬과 빠른 평균 실행 시간을 중시할 때 선호

병합 정렬 (Merge Sort): 배열을 반으로 나누고 각각을 재귀적으로 정렬한 다음 두 배열을 하나로 병합하는 과정을 통해 정렬
 - 추가적인 메모리를 필요, 대규모 데이터에 대한 정렬에서 안정적인 성능을 제공

분할정복법
 - 분할 : 해결하고자 하는 문제를 작은 크기의 동일한 문제들로 분할
 - 정복 : 각각의 작은 문제를 순환적으로 해결
 - 합병 : 작은 문제의 해를 합하여 원래 문제에 대한 해를 구함

알고리즘 성능 분석
 시간 복잡도 : 알고리즘이 문제를 해결하는 데 필요한 시간이 얼마나 걸리는지를 나타내는 척도
 공간 복잡도 : 알고리즘 실행 시 필요한 메모리 공간의 양 (입력 크기와 알고리즘의 저장 공간 사용량으로 평가)
