JUnit 프레임워크에서 제공하는 메서드
 assert 메서드 (x: 에상, y: 실제)
  - assertEquals(x, y, [메세지]), assertNotEquals(x, y, [메세지])
    두 값이 같은지 / 다른지 비교
    assertEquals(4, calculator.add(2, 2), "실패시 메세지 출력 가능");
    assertNotEquals(5, calculator.add(2, 2), "실패시 메세지 출력 가능");

  - assertTrue(조건, [메세지]), assertFalse(조건, [메세지])
    조건이 참 / 거짓 인지 검사
    assertTrue('a' < 'b', "메세지");
    assertFalse('a' > 'b', "메세지");

  - assertNull(객체, [메세지]), assertNotNull(객체, [메세지])
    객체가 null인지 / 아닌지 검사
    assertNull(value, "메세지");
    assertNotNull(value, "메세지");

  - assertThrows(예외타입, 함수, [메세지])
    실행한 코드가 예상된 예외를 던지는지 검사
    assertThrows(NullPointerException.class, () -> {
        String str = null;
        str.length(); // null 객체에 대해 메서드 호출
    });
    
예상 결과와 실제 결과를 비교하는 데 사용되는 메서드
 assertEquals(x,y) (예상, 실제)
  JUnit 프레임워크에서 제공하는 메서드
 
 assertThat(y).isEqualTo(x) (실제, 예상)
  AssertJ 라이브러리에서 제공하는 메서드. Fluent API제공
  isNotNull(), contains(), startsWith(), endsWith() 등의 메서드를 사용하여 특정 조건을 확인

