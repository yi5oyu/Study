https://udacity.github.io/git-styleguide/

작은 변경 사항이라도 커밋 메시지를 통해 충분히 설명
커밋을 작게 유지하고 관련된 변경 사항을 한 커밋에 묶음

형식
  type: Subject (태그: 제목)
  (공백)
  body (본문)
  (공백)
  footer (꼬리말)

제목
 - 최대 50자 이내로 작성
 - 첫 글자는 대문자로 시작
 - 마침표를 사용하지 않음
 - 명령문 형태로 작성
   ex) Add new feature, Fix bug in user login
본문
 - 변경 사항에 대한 자세한 설명이 필요할 경우 추가 (선택 사항)
 - 각 줄은 72자 이내로 작성
 - 어떻게 변경했는지보다는 왜 변경했는지 변경된 이유와 배경, 상세한 설명을 포함
꼬리말
 - 관련된 이슈 번호를 참조 (선택 사항)
   ex) Fixes #123


커밋 유형
 - 커밋 메시지 앞에 커밋의 목적을 나타내는 태그
   feat        : 기능 (새로운 기능)
   fix         : 버그 (버그 수정)
   refactor    : 리팩토링
   design      : CSS 등 사용자 UI 디자인 변경
   comment     : 필요한 주석 추가 및 변경
   style       : 스타일 (코드 형식, 세미콜론 추가: 비즈니스 로직에 변경 없음)
   docs        : 문서 수정 (문서 추가, 수정, 삭제, README)
   test        : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직에 변경 없음)
   chore       : 기타 변경사항 (빌드 스크립트 수정, assets, 패키지 매니저 등)
   init        : 초기 생성
   rename      : 파일 혹은 폴더명을 수정하거나 옮기는 작업만 한 경우
   remove      : 파일을 삭제하는 작업만 수행한 경우
