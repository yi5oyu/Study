Git Flow

종류
 - master
  : 제품 출시 버전을 관리하는 메인 브랜치
 - develop
  : 다음 출시 버전을 위해 개발하는 브랜치
 - feature
  : 새로운 기능을 개발하는 브랜치
 - release
  : 다음 출시 버전을 준비하는 브랜치
 - hotfix
  : 출시된 제품의 버그를 고치기 위한 브랜치

과정
  master 브랜치에서 develop 브랜치를 분기
  개발자들은 develop 브랜치에 자유롭게 커밋
  기능 구현이 있는 경우 develop 브랜치에서 feature-* 브랜치를 분기
  배포를 준비하기 위해 develop 브랜치에서 release-* 브랜치를 분기
  테스트를 진행하면서 발생하는 버그 수정은 release-* 브랜치에 직접 반영
  테스트가 완료되면 release 브랜치를 master와 develop에 merge

GitHub Flow
 하나의 base 브렌치 (master) 에 기능을 추가 (hotfix 브랜치 or feature 브랜치 구분 하지 않음)

과정
 master 브랜치
  : 항상 최신 / 배포 가능한 상태 유지
 브랜치는 항상 master 브랜치에서 만듬
  : 브랜치 이름으로 명시 (커밋 메세지 명확하게 작성)
 orgin 브랜치로 수시로 push
  : 다른 사람이 확인할 수 있도록 함 / 작업한 부분 백업
 merge 준비 완료 되었을때  pull request 생성
  : master 브랜치에 반영하기위한 코드 리뷰
 즉시 배포
  : CI를 통과 후 master로 merge되면 자동으로 배포되도록 설정
