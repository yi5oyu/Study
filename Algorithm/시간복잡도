알고리즘이 문제를 해결하는 데 걸리는 시간
입력 크기에 대한 함수로 표현
알고리즘의 효율성을 평가
알고리즘이 얼마나 빠르게 동작할지 예측
알고리즘을 비교하고 선택하는 데 중요한 기준

빅 오 표기법
 O(1): 상수 시간 (Constant Time)
  - 입력 크기와 상관없이 일정한 시간이 걸림 (배열의 특정 인덱스에 접근하는 경우)
 O(n): 선형 시간 (Linear Time) 
  - 알고리즘 실행 시간이 입력 크기에 직접 비례 (배열을 순회하는 경우)
 O(logn): 로그 시간 (Logarithmic Time)
  - 실행 시간이 입력 크기의 로그에 비례 (이진 검색)
 O(nlogn): 선형 로그 시간 (Linearithmic Time)
  - 각 레벨에서 n에 비례하는 연산을 수행 (퀵 정렬)
 O(n^2): 이차 시간 (Quadratic Time) 
  - 알고리즘 실행 시간이 입력 크기의 제곱에 비례 (버블 정렬)
 O(2^n): 지수 시간 (Exponential Time)
  - 알고리즘 실행 시간이 입력 크기에 대해 지수적으로 증가 (브루트포스(brute-force) 방식)
 O(n!): 팩토리얼 시간 (Factorial time)
  - 알고리즘의 실행 시간이 입력 크기의 팩토리얼에 비례하여 증가

 연산의 횟수를 중심으로 생각 (반복문이나 재귀 호출 등에서 결정)

고차원 연산 무시
 시간 복잡도가 O(n^2 + n)인 알고리즘은 큰 입력 값에서 n^2이 지배적인 역할을 하므로 O(n^2)으로 간주
 
