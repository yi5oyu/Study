Layered Architecture 레이어드 아키텍처
 애플리케이션의 컴포넌트를 유사 관심사 기중으로 레이어드롤 묶어 수평적으로 구성한 구조
 인프라(DB) 레이어의 추가 여부로 계층을 늘어날 수 있음

 각 레이어 특징
  - 가장 가까운 하위 레이어의 의존성 주입받음
  - 다른 레이어의 역할을 침범하지 않음 ( 코드 확장성, 가독성, 기능 구현에 유리 )
  - 독립적으로 작성되 의존성을 낮춰 단위 테스트에 용이

 SpringBoot의 레이어드 아키텍처
  Spring MVC
   View, Controller : 프레젠테이션 계층
   Model : 비즈니스 계층(Service), 데이터 접근(DAO. Spring data JPA : Repository) 계층 영역으로 구분
    프레젠테이션 계층
     애플리케이션의 최상단 계층. UI 계층 // UI, API 제공
     클라이언트와 접점. 클라이언트로부터 데이터와 요청을 받고 처리 결과를 응답으로 전달하는 역할
    비즈니스 계층
     서비스 계층
     홱심 비즈니스 로직을 구현, 트랜젝션 처리 / 유효성 검사 등의 작업 수행
    데이터 접근 계층
     영속(Persistence) 계층
     DB에 접근해야 하는 작업 수행

// 프레젠테이션 계층과 비즈니스 계층에선 DTO. 비즈니스 계층과 데이터 접근 계층에선 Entity
