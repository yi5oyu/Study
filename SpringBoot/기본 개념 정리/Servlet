Servlet 서블릿
 클라이언트 요청을 처리하고 결과를 반환하는 자바 웹 프로그래밍 기술
 Servlet Container
   서블릿 인스턴스를 생성하고 관리하는 역할을 수행
   ( 톰캣은 WAS의 역할과 서블릿 컨테이너의 역할 수행)
   - 서블릿 객체 생성, 초기화, 호출, 종료하는 생명주기 관리
   - 싱글톤 패턴으로 관리
   - 멀티 스레딩 지원
 Spirng에서 DispatcherServlet이 서블릿 역할 수행
  톰캣을 사용하는 스프링. 서블릿 컨테이너와 DispatcherServlet은 자동 설정된 web.xml의 설정값 공유
  1. DispatcherServlet은 요청(HttpServletRequest)이 들어오면 핸들러 매핑(Handler Mapping)을 통해 요청 URI에 매핑된 핸들러(컨트롤러) 탐색
  2. 핸들러 어댑터(HandlerAdapter)로 컨트롤러 호출
  3. 핸들러 어댑터에 컨트롤러 응답이 돌아오면 ModelAndView로 응답을 가공해 반환
  4. 뷰 리졸버(View Resolver)를 통해 뷰(View)를 받아 리턴
    // 뷰가 없는 REST 형식에선 뷰 리졸버를 호출하지 않고 MessageConverter를 거쳐 JSON 형식으로 변환해서 응답
---
 BeanNameUrlHandlerMapping
   빈 이름을 URL로 사용하는 매핑 전략. 빈을 정의할 때 슬래시( / )가 들어가면 매핑 대상
 ControllerClassNameHandlerMapping
   URL과 일치하는 클래스 이름을 갖는 빈을 컨트롤러로 사용. 이름 중 Controller를 제외하고 앞부분에 작성된 suffix를 소문자로 매핑
 SimpleUrlHanderMapping
   URL 패턴에 매핑된 컨트롤러 사용
 DefaultAnnotationHandlerMapping
   어노테이션으로 URL과 컨트롤러
---
